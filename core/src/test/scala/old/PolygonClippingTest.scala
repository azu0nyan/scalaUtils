package old
import utils.math.planar.algo.polygonClipping.*
import utils.math.planar.algo.polygonClipping.PolygonClipping.*
import utils.math.planar.{Polygon, PolygonRegion, V2}

import scala.collection.mutable.ListBuffer

object PolygonClippingTest extends App{
  val pol = Polygon(List(PolygonRegion(List(
    V2(27.417677985302234, -8.783133877479882),
    V2(22.700000000000003, -13.899999999999995),
    V2(14.313498023109695, -14.184867594323714),
    V2(14.25, -14.749999999999996),
    V2(14.100000000000001, -18.349999999999994),
    V2(14.050000000000004, -20.199999999999996),
    V2(-0.3999999999999986, -20.349999999999994),
    V2(-0.9078112068001318, -14.701895761100543),
    V2(-14.100000000000001, -15.149999999999995),
    V2(-14.599062961166553, -10.815545763201612),
    V2(-1.3386461289375566, -9.909956321000607),
    V2(-2.8499999999999943, 6.900000000000002),
    V2(-3.116348903389394, 10.00354374384169),
    V2(-12.0, 8.150000000000002),
    V2(-16.691916259444252, 7.361272697765841),
    V2(-14.599062961166553, -10.815545763201612),
    V2(-27.549999999999997, -11.699999999999996),
    V2(-27.95, 4.100000000000005),
    V2(-23.599999999999998, 6.200000000000006),
    V2(-16.691916259444252, 7.361272697765841),
    V2(-16.799999999999997, 8.300000000000008),
    V2(-9.549999999999997, 16.250000000000004),
    V2(-3.678448471318693, 16.553225665800447),
    V2(-4.0, 20.300000000000008),
    V2(1.9000000000000057, 21.750000000000004),
    V2(9.5, 21.450000000000006),
    V2(13.916426592797784, 16.03631578947369),
    V2(17.842721298007806, 13.655477510782509),
    V2(15.836214981729597, 13.683026796589532),
    V2(17.25, 11.950000000000006),
    V2(14.872890838293873, -9.206271539184527))),
    PolygonRegion(List(V2(44.2, -3.8499999999999943),
      V2(43.7, -8.499999999999996),
      V2(28.400000000000006, -8.749999999999996), V2(27.417677985302234, -8.783133877479882), V2(29.200000000000003, -6.849999999999994), V2(25.85000000000001, 8.800000000000008), V2(17.842721298007806, 13.655477510782509), V2(36.45, 13.40000000000001), V2(41.7, 5.850000000000005)))))

  pol.regions.foreach(r => println(r.areaSigned))
  println("--------------------")

//  Polygon.fixOrdersForHoles(pol.regions).foreach(r => println(r.areaSigned))
//  Polygon.toRegionsAndHoles(Polygon.fixOrdersForHoles(pol.regions))
//    .foreach(r => println(r))

//  val poly2 = Poly(ListBuffer(Seq(V2(-14.799999999999997, 7.450000000000006), V2(-5.299999999999997, -3.5499999999999936), V2(-1.8499999999999943, 11.600000000000005)),
//    Seq(V2(1.3000000000000043, 5.800000000000008), V2(3.8000000000000043, -3.899999999999995), V2(12.800000000000004, 2.6500000000000057)),
//    Seq(V2(14.25, 20.050000000000008), V2(-20.25, 19.90000000000001), V2(-20.049999999999997, -9.649999999999995), V2(20.950000000000003, -8.599999999999994))),false)\


  /*val poly2 = Poly(ListBuffer(
    Seq(V2(20,15), V2(20,5), V2(60,5), V2(60,15), V2(20,15)),
    Seq(V2(34.66666666666667,10), V2(30,10), V2(30,14), V2(34.66666666666667,10)),
    Seq(V2(51,10), V2(37,8), V2(34.66666666666667,10), V2(51,10)),
  ),false)*/
  /*val poly2 = Poly(ListBuffer(Seq(V2(9.75, 4.900000000000006), V2(2.0, 1.7500000000000036), V2(-7.75, 3.2000000000000064), V2(-5.149999999999999, 8.100000000000005)), Seq(V2(11.400000000000006, 13.500000000000004), V2(-14.0, 11.200000000000006), V2(-11.75, -1.7999999999999936), V2(16.400000000000006, 0.25000000000000355))),false)

  poly2.regions.map(PolygonRegion(_) ).foreach(p => println(p.signedArea))

  val vs1:Seq[V2] = Seq(
    V2(0, 0),
    V2(1, 0),
    V2(1, 1),
    V2(0, 1))

  val vs2:Seq[V2] =vs1.map(v => v + V2(.5d, 0d) )

  val p1:Poly  =PolygonClippingVisualization.polygonsToTest("SharedRightEdge")._1// new Poly(Seq(vs1), false)

  val p2:Poly  =PolygonClippingVisualization.polygonsToTest("SharedRightEdge")._2//new Poly(Seq(vs2), false)

  val seg1 = PolyBool.segments(p1);
  val seg2 = PolyBool.segments(p2);
  val comb = PolyBool.combine(seg1, seg2);
  val seg3 = PolyBool.selectUnion(comb);
  val poly = PolyBool.polygon(seg3);

  println(s"seg1:  $seg1 ")
  println(s"seg2:  $seg2 ")
  println(s"comb:  $comb ")
  println(s"seg3:  $seg3 ")
  println(s"poly:  $poly ")*/
}
